# Aggregate Kubernetes manifests for minimal deployment (apply selectively or split later)

# 1. Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: telephony-demo-k8s
---
# 2. Secrets (replace stringData with real values or use external secret manager)
apiVersion: v1
kind: Secret
metadata:
  name: livekit-secrets
  namespace: telephony-demo-k8s
type: Opaque
stringData:
  LIVEKIT_API_KEY: "REPLACE_ME_KEY"
  LIVEKIT_API_SECRET: "REPLACE_ME_SECRET"
  STT_API_KEY: "REPLACE_STT_KEY"
  TTS_API_KEY: "REPLACE_TTS_KEY"
---
# 3. ConfigMap for LiveKit server config
apiVersion: v1
kind: ConfigMap
metadata:
  name: livekit-config
  namespace: telephony-demo-k8s
data:
  livekit.yaml: |
    keys:
      LK_API_1234567890: LK_SECRET_0123456789abcdef0123456789abcdef
    room:
      empty_timeout: 60
      max_participants: 100
    logging:
      level: info
      json: true
---
# 4. Redis (for session/state if horizontally scaling)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: telephony-demo-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          args: ["redis-server", "--appendonly", "no"]
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: telephony-demo-k8s
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
# 5. LiveKit Deployment (single pod demo; StatefulSet recommended for prod)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: livekit-signal
  namespace: telephony-demo-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: livekit
  template:
    metadata:
      labels:
        app: livekit
    spec:
      containers:
        - name: livekit
          image: livekit/livekit-server:latest
          args: ["--config", "/config/livekit.yaml"]
          env:
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_SECRET
            - name: LIVEKIT_REGION
              value: "k8s"
            - name: LIVEKIT_PORT
              value: "7880"
          volumeMounts:
            - name: livekit-config
              mountPath: /config
          ports:
            - containerPort: 7880 # signaling
            - containerPort: 7881 # udp rtp (nodePort below optional)
            - containerPort: 5060 # sip
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: 1Gi
      volumes:
        - name: livekit-config
          configMap:
            name: livekit-config
---
apiVersion: v1
kind: Service
metadata:
  name: livekit-signal
  namespace: telephony-demo-k8s
spec:
  selector:
    app: livekit
  ports:
    - name: signaling
      port: 7880
      targetPort: 7880
    - name: rtp
      port: 7881
      targetPort: 7881
    - name: sip
      port: 5060
      targetPort: 5060
  type: ClusterIP
---
# Optional: external access (adjust for cloud LB)
apiVersion: v1
kind: Service
metadata:
  name: livekit-external
  namespace: telephony-demo-k8s
spec:
  selector:
    app: livekit
  ports:
    - name: signaling
      port: 80
      targetPort: 7880
    - name: sip
      port: 5060
      targetPort: 5060
  type: LoadBalancer
---
# 6. Orchestrator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: telephony-demo-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
    spec:
      containers:
        - name: orchestrator
          image: telephony-demo/orchestrator:local
          imagePullPolicy: IfNotPresent
          env:
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_SECRET
            - name: ORCH_JWT_TTL_SECONDS
              value: "60"
            - name: TWILIO_SIP_INGRESS_HOST
              value: "replace-sip.example.com"
            - name: LOG_LEVEL
              value: "INFO"
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 300m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: telephony-demo-k8s
spec:
  selector:
    app: orchestrator
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
---
# 7. Metrics Collector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics
  namespace: telephony-demo-k8s
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics
  template:
    metadata:
      labels:
        app: metrics
    spec:
      containers:
        - name: metrics
          image: telephony-demo/metrics:local
          env:
            - name: METRICS_SUMMARY_PORT
              value: "9100"
            - name: LATENCY_WINDOW_SECONDS
              value: "60"
          ports:
            - containerPort: 9100
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: metrics
  namespace: telephony-demo-k8s
spec:
  selector:
    app: metrics
  ports:
    - port: 9100
      targetPort: 9100
---
# 8. Agent Deployment (horizontal scaling)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: telephony-demo-k8s
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      containers:
        - name: agent
          image: telephony-demo/agent:local
          env:
            - name: LIVEKIT_HOST
              value: "http://livekit-signal.telephony-demo-k8s.svc.cluster.local:7880"
            - name: LIVEKIT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_KEY
            - name: LIVEKIT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: livekit-secrets
                  key: LIVEKIT_API_SECRET
            - name: METRICS_ENDPOINT
              value: "http://metrics.telephony-demo-k8s.svc.cluster.local:9100/ingest"
            - name: LOG_LEVEL
              value: "INFO"
            - name: AGENT_RESPONSE_MODE
              value: "echo"
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
# 9. Horizontal Pod Autoscaler for Agents (requires metrics server)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agent-hpa
  namespace: telephony-demo-k8s
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agent
  minReplicas: 2
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 65
---
# 9b. (Optional) Horizontal Pod Autoscaler for LiveKit signaling (CPU-based placeholder)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: livekit-signal-hpa
  namespace: telephony-demo-k8s
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: livekit-signal
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
# 10. PodDisruptionBudget (prevent all agent pods draining)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agent-pdb
  namespace: telephony-demo-k8s
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: agent
---
# 11. NetworkPolicy example (restrict ingress to orchestrator & metrics)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orchestrator
  namespace: telephony-demo-k8s
spec:
  podSelector:
    matchLabels:
      app: orchestrator
  ingress:
    - from:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 8000
  policyTypes:
    - Ingress
---
# 12. Load Test Job (simulate 100 concurrent callers -> generates synthetic latency events)
apiVersion: batch/v1
kind: Job
metadata:
  name: loadtest-100
  namespace: telephony-demo-k8s
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: loadtest
    spec:
      restartPolicy: Never
      containers:
        - name: loadtest
          image: telephony-demo/loadtest:local
          imagePullPolicy: IfNotPresent
          env:
            - name: ORCH_PUBLIC_URL
              value: "http://orchestrator.telephony-demo-k8s.svc.cluster.local:8000"
            - name: METRICS_ENDPOINT
              value: "http://metrics.telephony-demo-k8s.svc.cluster.local:9100/ingest"
            - name: LOADTEST_ROOM_PREFIX
              value: "lt-"
            - name: LOADTEST_PHRASE
              value: "testing one two three"
          args:
            - "--concurrency"
            - "100"
            - "--bursts"
            - "2"
            - "--shared-room"
            # ENTRYPOINT already executes: python load_test.py
            # Synthetic mode default (no --real). Posting metrics enabled by default.
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              cpu: 600m
              memory: 512Mi
---
# 13. NOTE:
# - Replace telephony-demo-k8s/* image references with registry paths (e.g., ghcr.io/org/telephony-orchestrator:tag).
# - Apply base stack: kubectl apply -f k8s/manifests.yaml
# - Run load test job: kubectl create job --from=job/loadtest-100 loadtest-100-run (or delete & re-apply to rerun)
# - Watch job logs: kubectl logs -n telephony-demo-k8s job/loadtest-100
# - Port-forward (examples):
#     kubectl -n telephony-demo-k8s port-forward svc/orchestrator 8000:8000 &
#     kubectl -n telephony-demo-k8s port-forward svc/metrics 9100:9100 &
#     kubectl -n telephony-demo-k8s port-forward svc/livekit-signal 7880:7880 &
# - Latency report script (local):
#     python scripts/latency_report.py --metrics-url http://localhost:9100 --watch 5 --sparkline
# - For production: add TLS ingress, persistent volumes (if needed), proper autoscaling signals (custom latency metric).
